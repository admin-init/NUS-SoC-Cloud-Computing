services:
  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: ticketdb
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  order-management-service:
    image: admininit/ticket-system-order-management-service:latest
    container_name: order-service
    depends_on:
      - postgres
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/ticketdb
      QUARKUS_DATASOURCE_JDBC_DRIVER: org.postgresql.Driver
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: yourpassword
      # 可选：如果你希望通过环境变量覆盖 HTTP 端口（与配置文件中的 quarkus.http.port 冲突时生效）
      # QUARKUS_HTTP_PORT: 50081
    ports:
      - "50081:50081"   # 宿主机通过 8080 访问应用，容器内服务监听在 50081
    networks:
      - app_network

  operations-management-service:
    image: admininit/ticket-system-operations-management-service:latest
    container_name: operations-service
    depends_on:
      - postgres
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/ticketdb
      QUARKUS_DATASOURCE_JDBC_DRIVER: org.postgresql.Driver
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: yourpassword
      # 可选：如果你希望通过环境变量覆盖 HTTP 端口（与配置文件中的 quarkus.http.port 冲突时生效）
      # QUARKUS_HTTP_PORT: 50081
    ports:
      - "50080:50080"   # 宿主机通过 8080 访问应用，容器内服务监听在 50081
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
